This file is intended for developers wishing to run/inspect/modify Trelby
using the source code and is not intended for end users using a released package.

1. Requirements
===============

To build and run Trelby, you will need Python (2.6 or 2.7) and wxWidgets (2.8)
and its Python bindings. You also need the lxml Python library (http://lxml.de/).

To build the manual, you will also need xsltproc and docbook-xsl.

2. Preparing data files
=======================

Trelby needs special preparation for three of its data files. If you do not do
this, that aspect of the program will not work.

 * Name list

  $ make names.txt.gz

 * Dictionary

  $ make dict_en.dat.gz

 * Manual

  $ make manual.html

2.3 Creating a Linux Distribution Package
=========================================

You can run "make dist", which performs the three steps above and also
generates a Linux distribution package. It will also try to build a
Debian package which you can also ignore.

Should the command fail, you may need to add the "devscripts" and "debhelper"
packages on Debian and Debian-based distributions such as Ubuntu.

2.5. Preparing for a Windows build
==================================

If you want to create the Windows package, you'll need to place the
Windows redistributable runtime file vcredist_x86.exe in the trelby
directory.

Be sure to have the following installed:

 * python-2.7.2.msi
  - py2exe-0.6.9.win32-py2.7.exe
  - wxPython2.8-win32-unicode-2.8.12.1-py27.exe
  - nsis-2.46-setup.exe
  - lxml-2.3.win32-py2.7.exe
  - pycrypto exe

Install vcredist_x86.exe locally. On Win Vista/7, msvcp90.dll will not be
under windows/system32, but under windows/winsxs. Hunt this file down,
and copy it over to system32. This just causes duplication, nothing else,
but is required so nsis won't complain about a missing DLL.

Finally ensure you had run make dist in the directory on a linux machine,
so all files are in place. (and ensure vcredist_x86.exe is here as well)

Then, on Windows, to create the installer:

1) cd <trelby directory>
2) build.bat
4) nsis.bat

Your freshly created Setup-Trelby-<version>.exe should be ready.


3. Running Trelby in test mode
==============================

On Linux:

 $ cd ~/trelby/
 $ src/trelby.py --test

On Windows:

 $ cd \trelby
 $ \python27\python src/trelby.py --test sample.trelby

 (Substitute correct path to python.) The file t.bat contains the
 last command.

4. Differences from packaged versions
=====================================

The "--test" command line argument makes Trelby differ from normal running
as follows:

 -No splash window is displayed on startup.

 -No global directory locations are used; configuration/state files
 instead go under ".trelby" in the current directory.

 -The following characters activate special behavior:

  -"å": Load "sample.trelby".

  -"¤": Call function MyCtrl.cmdTest.

  -"½": Run speed tests.

   (The above characters are in the ISO-8859-1 character set.)
